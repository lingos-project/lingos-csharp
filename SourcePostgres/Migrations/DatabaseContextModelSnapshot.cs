// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SourcePostgres;

namespace SourcePostgres.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Common.Locale", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<bool>("Deprecated")
                        .HasColumnType("boolean")
                        .HasColumnName("deprecated");

                    b.Property<bool>("Required")
                        .HasColumnType("boolean")
                        .HasColumnName("required");

                    b.HasKey("Name")
                        .HasName("pk_locales");

                    b.ToTable("locales");
                });

            modelBuilder.Entity("Common.Scope", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<bool>("Deprecated")
                        .HasColumnType("boolean")
                        .HasColumnName("deprecated");

                    b.HasKey("Name")
                        .HasName("pk_scopes");

                    b.ToTable("scopes");
                });

            modelBuilder.Entity("Common.Translation", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("text")
                        .HasColumnName("key");

                    b.Property<string>("LocaleName")
                        .HasColumnType("text")
                        .HasColumnName("locale_name");

                    b.Property<string>("ScopeName")
                        .HasColumnType("text")
                        .HasColumnName("scope_name");

                    b.Property<string>("Variant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("none")
                        .HasColumnName("variant");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.HasKey("Key", "LocaleName", "ScopeName", "Variant")
                        .HasName("pk_translations");

                    b.HasIndex("LocaleName")
                        .HasDatabaseName("ix_translations_locale_name");

                    b.HasIndex("ScopeName")
                        .HasDatabaseName("ix_translations_scope_name");

                    b.ToTable("translations");
                });

            modelBuilder.Entity("Common.Translation", b =>
                {
                    b.HasOne("Common.Locale", "Locale")
                        .WithMany()
                        .HasForeignKey("LocaleName")
                        .HasConstraintName("fk_translations_locales_locale_name")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Scope", "Scope")
                        .WithMany()
                        .HasForeignKey("ScopeName")
                        .HasConstraintName("fk_translations_scopes_scope_name")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locale");

                    b.Navigation("Scope");
                });
#pragma warning restore 612, 618
        }
    }
}
